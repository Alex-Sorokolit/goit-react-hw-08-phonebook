{"version":3,"file":"static/js/264.1da57d25.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"Button_submitBtn__Xtf41\"};","import css from './Button.module.css';\n\nexport const Button = ({ children }) => {\n  return (\n    <button className={css.submitBtn} type=\"submit\">\n      {children}\n    </button>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\n// файл оголошення функцій-селекторів\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    // const contacts = selectContacts(state);\n    // const filter = selectFilter(state);\n    // console.log('selectVisibleContacts');\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","export const selectFilter = state => state.filter.status;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactCard\":\"Contact_contactCard__5AHBI\",\"name\":\"Contact_name__xbxVU\",\"deleteBtn\":\"Contact_deleteBtn__L35yB\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nimport css from './Contact.module.css';\nimport { MdDelete } from 'react-icons/md';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <div className={css.contactCard}>\n      <p className={css.name}>\n        {contact.name}: {contact.number}\n      </p>\n      <button className={css.deleteBtn} type=\"buttone\" onClick={handleDelete}>\n        <MdDelete />\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\",\"title\":\"ContactList_title__gpugJ\",\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"message\":\"ContactList_message__b6Via\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contacts-selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.title}>Contact list</h2>\n      <ul className={css.list}>\n        {visibleContacts.map(contact => (\n          <li key={contact.id} className={css.item}>\n            <Contact contact={contact} />\n          </li>\n        ))}\n        {visibleContacts.length === 0 && (\n          <p className={css.message}>\n            your contact list is empty, add new contact\n          </p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formCard\":\"ContactForm_formCard__zIxaR\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"ErrorMessage\":\"ContactForm_ErrorMessage__ttuE5\"};","// імпорт dispatch\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n// імпорт генератор екшену\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport css from './ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const checkIsInContacts = newName =>\n    contacts.some(({ name }) => name.toLowerCase() === newName.toLowerCase());\n\n  // Метод виконується при сабміті форми\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n    const isInContacts = checkIsInContacts(name);\n\n    // не додаємо контакт\n    if (isInContacts) {\n      alert(`\"${name}\" is already in contacts.`);\n      return;\n    }\n\n    // викликаємо генератор екшену та передаємо текст завдання для поля payload\n    dispatch(addContact({ name, number }));\n\n    // Очистка форми\n    form.reset();\n  };\n\n  return (\n    <div className={css.formCard}>\n      <h2>New Contact</h2>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\" \"\n            required\n            autoFocus\n          />\n        </label>\n\n        <label className={css.label}>\n          Phone\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\" \"\n            required\n          />\n        </label>\n        <Button type=\"submit\">Add</Button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formCard\":\"Filter_formCard__QOYwR\",\"form\":\"Filter_form__wVnxJ\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"ErrorMessage\":\"Filter_ErrorMessage__IpQiP\",\"findIcon\":\"Filter_findIcon__P-9u4\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport css from './Filter.module.css';\nimport { CgSearch } from 'react-icons/cg';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.formCard}>\n      <h2>Find</h2>\n      <label className={css.label}>\n        Find contact by name:\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          onChange={event => dispatch(setFilter(event.target.value))}\n        />\n        <CgSearch className={css.findIcon} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__LNvgJ\"};","import ContactList from 'components/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport BarLoader from 'react-spinners/BarLoader';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <section className={css.contacts}>\n        <ContactForm />\n        <Filter />\n      </section>\n      <section>\n        {isLoading && !error ? (\n          <BarLoader color=\"#5ac846\" width=\"100%\" />\n        ) : (\n          <ContactList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Button","children","className","css","type","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","status","normalizedFilter","toLowerCase","contact","name","includes","Contact","dispatch","useDispatch","number","onClick","deleteContact","id","visibleContacts","useSelector","map","length","ContactForm","onSubmit","event","preventDefault","newName","form","target","value","some","alert","addContact","reset","pattern","title","placeholder","required","autoFocus","onChange","setFilter","useEffect","fetchContacts","color","width"],"sourceRoot":""}