{"version":3,"file":"static/js/26.22a4db83.chunk.js","mappings":"oLAAaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,mBAAQC,KAAK,SAAb,SAAuBD,GAC/B,C,kFCDD,EAAuB,2BAAvB,EAA0D,4BAA1D,EAAoG,kCAApG,EAA8I,4B,wCCKjIE,EAAe,SAACC,EAAQC,GACnC,IAAMC,GAAWC,EAAAA,EAAAA,MAoBjB,OACE,SAAC,KAAD,CAAQC,cANiB,CACzBC,KAAM,MACNC,MAAO,MACPC,SAAU,OAGiCC,SAnB5B,SAAAC,GACfA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cAEnBV,GACEW,EAAAA,EAAAA,IAAS,CACPR,KAAMM,EAAKG,SAAST,KAAKU,MACzBT,MAAOK,EAAKG,SAASR,MAAMS,MAC3BR,SAAUI,EAAKG,SAASP,SAASQ,SAGrCJ,EAAKK,OACN,EAOC,SACG,gBAAGC,EAAH,EAAGA,aAAH,OACC,kBACEC,UAAWC,EACXX,SAAUS,EACVZ,KAAK,gBACLe,aAAa,MAJf,WAME,mBAAOF,UAAWC,EAAlB,sBAEE,cAAGD,UAAWC,EAAd,kGAIA,kBACED,UAAWC,EACXrB,KAAK,OACLO,KAAK,OACLgB,UAAQ,EACRC,WAAS,EACTC,YAAY,IACZC,QAAQ,0BACRC,MAAM,2BAGV,mBAAOP,UAAWC,EAAlB,mBAEE,cAAGD,UAAWC,EAAd,mCACA,kBACED,UAAWC,EACXrB,KAAK,QACLO,KAAK,QACLgB,UAAQ,EACRE,YAAY,IACZC,QAAQ,4CACRC,MAAM,+BAGV,mBAAOP,UAAWC,EAAlB,sBAEE,cAAGD,UAAWC,EAAd,iGAIA,kBACED,UAAWC,EACXrB,KAAK,WACLO,KAAK,WACLgB,UAAQ,EACRK,UAAU,IACVC,UAAU,KACVJ,YAAY,IACZC,QAAQ,+CACRC,MAAM,yBAGV,SAAC7B,EAAA,EAAD,yBAvDH,GA4DN,EC9ED,EATiB,WACf,OACE,4BACE,0CACA,SAACG,EAAD,MAGL,C","sources":["components/SubmitBtn/SubmitBtn.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["export const SubmitBtn = ({ children }) => {\n  return <button type=\"submit\">{children}</button>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"description\":\"RegisterForm_description__GEFx4\",\"input\":\"RegisterForm_input__FsgBz\"};","import { useDispatch } from 'react-redux';\nimport css from './RegisterForm.module.css';\nimport { register } from 'redux/auth/auth-operations';\nimport { SubmitBtn } from 'components/SubmitBtn/SubmitBtn';\nimport { Formik } from 'formik';\n\nexport const RegisterForm = (values, actions) => {\n  const dispatch = useDispatch();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n  const formikInitialValue = {\n    name: '123',\n    email: 'qwe',\n    password: 'asd',\n  };\n  return (\n    <Formik initialValues={formikInitialValue} onSubmit={onSubmit}>\n      {({ handleSubmit }) => (\n        <form\n          className={css.form}\n          onSubmit={handleSubmit}\n          name=\"register_form\"\n          autoComplete=\"off\"\n        >\n          <label className={css.label}>\n            Username\n            <p className={css.description}>\n              Username must consist of two words, first name and last name,\n              separated by a space.\n            </p>\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              required\n              autoFocus\n              placeholder=\" \"\n              pattern=\"^[a-zA-Z]+\\s[a-zA-Z]+$\"\n              title=\"Example: John Wick\"\n            />\n          </label>\n          <label className={css.label}>\n            Email\n            <p className={css.description}>Enter E-mail address</p>\n            <input\n              className={css.input}\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\" \"\n              pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n              title=\"Example: wick@mail.com\"\n            />\n          </label>\n          <label className={css.label}>\n            Password\n            <p className={css.description}>\n              Must have at least 7 characters (1 character uppercase , 1\n              lowercase and 1 number)\n            </p>\n            <input\n              className={css.input}\n              type=\"password\"\n              name=\"password\"\n              required\n              minLength=\"7\"\n              maxLength=\"12\"\n              placeholder=\" \"\n              pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\n              title=\"Example: Xn2isL0\"\n            />\n          </label>\n          <SubmitBtn>Register</SubmitBtn>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <h2>Registration</h2>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["SubmitBtn","children","type","RegisterForm","values","actions","dispatch","useDispatch","initialValues","name","email","password","onSubmit","event","preventDefault","form","currentTarget","register","elements","value","reset","handleSubmit","className","css","autoComplete","required","autoFocus","placeholder","pattern","title","minLength","maxLength"],"sourceRoot":""}